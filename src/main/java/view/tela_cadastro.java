/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import Validacoes.ValidarEmail;
import Validacoes.ValidarNome;
import Validacoes.ValidarTelefone;
import com.mycompany.appagenda.ConexaoBD;
import com.mycompany.appagenda.Contato;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Ernane
 */
public class tela_cadastro extends javax.swing.JFrame {
    /**
     * Creates new form tela_cadastro
     */
    public tela_cadastro() {
        initComponents();        
        setLocationRelativeTo(null);
        setResizable(false); 
        desabilitarBotao();        
        jb_cadastrar.setEnabled(false);
}
    
    public void desabilitarBotao(){
    ValidarNome validarNome1 = new ValidarNome(jb_cadastrar);
    ValidarEmail validarEmail1 = new ValidarEmail(jb_cadastrar);
    ValidarTelefone validarTelefone1 = new ValidarTelefone(jb_cadastrar);
        
    jtf_nome.getDocument().addDocumentListener(new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {
            verificarCampos();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            verificarCampos();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            verificarCampos();
        }
    });
    
    jtf_email.getDocument().addDocumentListener(new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {            
            verificarCampos();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            verificarCampos();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            verificarCampos();
        }
    });
    
    jtf_telefone.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                verificarCampos();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                verificarCampos();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                verificarCampos();
            }
        });    
    }
    
    private void verificarCampos() {
        String nome = jtf_nome.getText();
        String email = jtf_email.getText();
        String telefone = jtf_telefone.getText();

        boolean nomeValido = ValidarNome.validarNome1(nome);
        boolean emailValido = ValidarEmail.validarEmail1(email);
        boolean telefoneValido = ValidarTelefone.validarTelefone1(telefone);

        jb_cadastrar.setEnabled(nomeValido && emailValido && telefoneValido);
    }
    
private void verificarNome() {
    String nome = jtf_nome.getText();

    // Realize a validação do nome
    if (!ValidarNome.validarNome1(nome)) {
        jb_cadastrar.setEnabled(false);
    } else {
        // Nome válido, reabilitar o botão de salvar se necessário
        jb_cadastrar.setEnabled(true);
    }
}

private void verificarEmail() {
    String email = jtf_email.getText();

    // Realize a validação do nome
    if (!ValidarEmail.validarEmail1(email)) {
        jb_cadastrar.setEnabled(false);
    } else {
        // Nome válido, reabilitar o botão de salvar se necessário
        jb_cadastrar.setEnabled(true);
    }
}
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    ConexaoBD con = new ConexaoBD();
    
    public boolean cadastrarPessoa(){
        try {            
            String nome = jtf_nome.getText();
            String email = jtf_email.getText();
            String telefone = jtf_telefone.getText();
        
            Connection c = con.connect();
            Contato cont = new Contato(nome, email, telefone);
      
            PreparedStatement cadastrarStmt = c.prepareStatement("insert into pessoa(nome, email, telefone) values (?,?,?)");
            
            cadastrarStmt.setString(1, cont.getNome());
            cadastrarStmt.setString(2, cont.getEmail());
            cadastrarStmt.setString(3, cont.getTelefone());
            
            
            cadastrarStmt.execute();
            cadastrarStmt.close();
            JOptionPane.showMessageDialog(null, "Cadastro realizado com sucesso...");
            con.closeConnection();
            return true;
        } catch (SQLException e) {
            System.err.println("Error ao realizar cadastro");
            System.err.println(e.getMessage());
            return false;
        }finally{
            con.closeConnection();
        }
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu4 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtf_email = new javax.swing.JTextField();
        jtf_nome = new javax.swing.JTextField();
        jb_cadastrar = new javax.swing.JButton();
        jtf_telefone = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenu4.setText("jMenu4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro");

        jLabel1.setText("Nome:");

        jLabel2.setText("Email:");

        jLabel3.setText("Telefone:");

        jtf_nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_nomeActionPerformed(evt);
            }
        });

        jb_cadastrar.setText("Cadastrar");
        jb_cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cadastrarActionPerformed(evt);
            }
        });

        jtf_telefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_telefoneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jb_cadastrar)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(jtf_telefone))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                            .addGap(30, 30, 30)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtf_email, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtf_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtf_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jtf_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtf_telefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jb_cadastrar)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jMenu1.setText("Opções");

        jMenuItem1.setText("Agenda");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ajuda");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem2.setText("Ajuda");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    tela_agenda cadastroAgenda = new tela_agenda();
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        
        cadastroAgenda.setVisible(true);
        //this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        JOptionPane.showMessageDialog(null, "Nome: Não pode ser vazio ou nulo, ter caracteres especiais \n"
                + "\n"
                + "Email: Deve estar no formato email@email.com\n"
                + "\n"
                + "Telefone: Não pode conter letras e deve ter 10 ou 11 numeros.\n"
                + "\n"
                + "Se tudo estiver correto, o botão ficará disponível.");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jtf_telefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_telefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_telefoneActionPerformed
    
    private void jb_cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cadastrarActionPerformed
        if (cadastrarPessoa()) {
            cadastroAgenda.atualizarLista();
            limpaCampos();            
        }
    }//GEN-LAST:event_jb_cadastrarActionPerformed

    private void jtf_nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_nomeActionPerformed

    }//GEN-LAST:event_jtf_nomeActionPerformed
     
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tela_cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tela_cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tela_cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tela_cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tela_cadastro().setVisible(true);
            }
        });
    }
    
    public void limpaCampos() {        
        jtf_nome.setText("");
        jtf_email.setText("");
        jtf_telefone.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jb_cadastrar;
    private javax.swing.JTextField jtf_email;
    private javax.swing.JTextField jtf_nome;
    private javax.swing.JTextField jtf_telefone;
    // End of variables declaration//GEN-END:variables
}
